"""recreate migration

Revision ID: 79401c48e0d8
Revises: 
Create Date: 2024-11-18 05:08:12.685927

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '79401c48e0d8'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('report_tag',
    sa.Column('tag_id', sa.Integer(), autoincrement=True, nullable=False, comment='タグID'),
    sa.Column('tag_name', sa.String(length=50), nullable=False, comment='タグ名'),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True, comment='作成日時'),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True, comment='更新日時'),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True, comment='削除日時'),
    sa.PrimaryKeyConstraint('tag_id'),
    sa.UniqueConstraint('tag_name')
    )
    op.create_table('user',
    sa.Column('user_id', sa.UUID(), nullable=False, comment='ユーザーID (UUID)'),
    sa.Column('username', sa.String(length=50), nullable=False, comment='ユーザー名'),
    sa.Column('email', sa.String(length=100), nullable=False, comment='メールアドレス'),
    sa.Column('password_hash', sa.String(length=255), nullable=False, comment='パスワード（ハッシュ）'),
    sa.Column('contact_number', sa.String(length=15), nullable=True, comment='連絡先電話番号'),
    sa.Column('date_of_birth', sa.Date(), nullable=True, comment='生年月日'),
    sa.Column('user_role', sa.SmallInteger(), nullable=False, comment='ユーザー権限 (1: guest, 2: free, 3: regular, 4: admin, 5: owner)'),
    sa.Column('user_status', sa.SmallInteger(), nullable=False, comment='アカウント状態 (1: active, 2: suspended)'),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True, comment='作成日時'),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True, comment='更新日時'),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True, comment='削除日時'),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('user_group',
    sa.Column('group_id', sa.UUID(), nullable=False, comment='グループID (UUID)'),
    sa.Column('group_name', sa.String(length=50), nullable=False, comment='グループ名'),
    sa.Column('parent_group_id', sa.UUID(), nullable=True, comment='親グループID (UUID)'),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True, comment='作成日時'),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True, comment='更新日時'),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True, comment='削除日時'),
    sa.ForeignKeyConstraint(['parent_group_id'], ['user_group.group_id'], ),
    sa.PrimaryKeyConstraint('group_id'),
    sa.UniqueConstraint('group_name')
    )
    op.create_table('group_evaluation',
    sa.Column('eval_id', sa.Integer(), autoincrement=True, nullable=False, comment='評価ID'),
    sa.Column('evaluator_id', sa.UUID(), nullable=False, comment='評価者ID (UUID)'),
    sa.Column('group_id', sa.UUID(), nullable=False, comment='グループID (UUID)'),
    sa.Column('score', sa.Integer(), nullable=False, comment='評価スコア'),
    sa.Column('comment', sa.Text(), nullable=True, comment='評価コメント'),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True, comment='作成日時'),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True, comment='更新日時'),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True, comment='削除日時'),
    sa.ForeignKeyConstraint(['evaluator_id'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['user_group.group_id'], ),
    sa.PrimaryKeyConstraint('eval_id')
    )
    op.create_table('group_evaluation_history',
    sa.Column('history_id', sa.Integer(), autoincrement=True, nullable=False, comment='評価履歴ID'),
    sa.Column('eval_id', sa.Integer(), nullable=False, comment='評価ID'),
    sa.Column('evaluator_id', sa.UUID(), nullable=False, comment='評価者ユーザーID (UUID)'),
    sa.Column('group_id', sa.UUID(), nullable=False, comment='グループID (UUID)'),
    sa.Column('score', sa.Integer(), nullable=True, comment='評価スコア'),
    sa.Column('comment', sa.Text(), nullable=True, comment='評価コメント'),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True, comment='作成日時'),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True, comment='更新日時'),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True, comment='削除日時'),
    sa.ForeignKeyConstraint(['evaluator_id'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['user_group.group_id'], ),
    sa.PrimaryKeyConstraint('history_id')
    )
    op.create_table('group_profile',
    sa.Column('profile_id', sa.Integer(), autoincrement=True, nullable=False, comment='プロフィールID'),
    sa.Column('group_id', sa.UUID(), nullable=False, comment='グループID (UUID)'),
    sa.Column('display_name', sa.String(length=100), nullable=True, comment='グループ表示名'),
    sa.Column('profile_text', sa.Text(), nullable=True, comment='グループプロフィール説明'),
    sa.Column('profile_image_url', sa.String(length=255), nullable=True, comment='グループプロフィール画像URL'),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True, comment='作成日時'),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True, comment='更新日時'),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True, comment='削除日時'),
    sa.ForeignKeyConstraint(['group_id'], ['user_group.group_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('profile_id')
    )
    op.create_table('group_search_history',
    sa.Column('search_id', sa.Integer(), autoincrement=True, nullable=False, comment='検索ID'),
    sa.Column('user_id', sa.UUID(), nullable=False, comment='ユーザーID (UUID)'),
    sa.Column('search_term', sa.String(length=100), nullable=True, comment='検索キーワード'),
    sa.Column('search_date', sa.TIMESTAMP(), nullable=True, comment='検索日時'),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True, comment='作成日時'),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True, comment='更新日時'),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True, comment='削除日時'),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('search_id')
    )
    op.create_table('report',
    sa.Column('report_id', sa.UUID(), nullable=False, comment='レポートID (UUID)'),
    sa.Column('user_id', sa.UUID(), nullable=False, comment='作成者ユーザーID (UUID)'),
    sa.Column('title', sa.String(length=100), nullable=False, comment='タイトル'),
    sa.Column('content', sa.Text(), nullable=True, comment='内容'),
    sa.Column('format', sa.SmallInteger(), nullable=False, comment='フォーマット (1: md, 2: html)'),
    sa.Column('visibility', sa.SmallInteger(), nullable=False, comment='公開設定 (1: public, 2: group, 3: private)'),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True, comment='作成日時'),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True, comment='更新日時'),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True, comment='削除日時'),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('report_id')
    )
    op.create_table('tag_view_history',
    sa.Column('history_id', sa.Integer(), autoincrement=True, nullable=False, comment='履歴ID'),
    sa.Column('user_id', sa.UUID(), nullable=False, comment='ユーザーID (UUID)'),
    sa.Column('tag_id', sa.Integer(), nullable=False, comment='タグID'),
    sa.Column('view_date', sa.TIMESTAMP(), nullable=True, comment='閲覧日時'),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True, comment='作成日時'),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True, comment='更新日時'),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True, comment='削除日時'),
    sa.ForeignKeyConstraint(['tag_id'], ['report_tag.tag_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('history_id')
    )
    op.create_table('user_evaluation_history',
    sa.Column('history_id', sa.Integer(), autoincrement=True, nullable=False, comment='評価履歴ID'),
    sa.Column('eval_id', sa.Integer(), nullable=False, comment='評価ID'),
    sa.Column('user_id', sa.UUID(), nullable=False, comment='評価を行ったユーザーID (UUID)'),
    sa.Column('target_user_id', sa.UUID(), nullable=False, comment='評価されたユーザーID (UUID)'),
    sa.Column('score', sa.Integer(), nullable=True, comment='評価スコア'),
    sa.Column('comment', sa.Text(), nullable=True, comment='評価コメント'),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True, comment='作成日時'),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True, comment='更新日時'),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True, comment='削除日時'),
    sa.ForeignKeyConstraint(['target_user_id'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('history_id')
    )
    op.create_table('user_group_membership',
    sa.Column('user_id', sa.UUID(), nullable=False, comment='ユーザーID (UUID)'),
    sa.Column('group_id', sa.UUID(), nullable=False, comment='グループID (UUID)'),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True, comment='作成日時'),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True, comment='更新日時'),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True, comment='削除日時'),
    sa.ForeignKeyConstraint(['group_id'], ['user_group.group_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('user_id', 'group_id')
    )
    op.create_table('user_ip_address',
    sa.Column('ip_id', sa.Integer(), autoincrement=True, nullable=False, comment='IP ID'),
    sa.Column('user_id', sa.UUID(), nullable=False, comment='ユーザーID (UUID)'),
    sa.Column('ip_address', sa.String(length=45), nullable=False, comment='IPアドレス'),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True, comment='作成日時'),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True, comment='更新日時'),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True, comment='削除日時'),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ip_id')
    )
    op.create_table('user_profile',
    sa.Column('profile_id', sa.Integer(), autoincrement=True, nullable=False, comment='プロフィールID'),
    sa.Column('user_id', sa.UUID(), nullable=False, comment='ユーザーID (UUID)'),
    sa.Column('display_name', sa.String(length=100), nullable=True, comment='表示名'),
    sa.Column('profile_text', sa.Text(), nullable=True, comment='プロフィール説明'),
    sa.Column('profile_image_url', sa.String(length=255), nullable=True, comment='プロフィール画像URL'),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True, comment='作成日時'),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True, comment='更新日時'),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True, comment='削除日時'),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('profile_id')
    )
    op.create_table('user_search_history',
    sa.Column('search_id', sa.Integer(), autoincrement=True, nullable=False, comment='検索ID'),
    sa.Column('user_id', sa.UUID(), nullable=False, comment='ユーザーID (UUID)'),
    sa.Column('search_term', sa.String(length=100), nullable=True, comment='検索キーワード'),
    sa.Column('search_date', sa.TIMESTAMP(), nullable=True, comment='検索日時'),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True, comment='作成日時'),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True, comment='更新日時'),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True, comment='削除日時'),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('search_id')
    )
    op.create_table('user_view_history',
    sa.Column('history_id', sa.Integer(), autoincrement=True, nullable=False, comment='履歴ID'),
    sa.Column('viewer_user_id', sa.UUID(), nullable=False, comment='閲覧者ID (UUID)'),
    sa.Column('viewed_user_id', sa.UUID(), nullable=False, comment='閲覧対象ユーザーID (UUID)'),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True, comment='作成日時'),
    sa.Column('view_date', sa.TIMESTAMP(), nullable=True, comment='閲覧日時'),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True, comment='更新日時'),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True, comment='削除日時'),
    sa.ForeignKeyConstraint(['viewed_user_id'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['viewer_user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('history_id')
    )
    op.create_table('report_evaluation_history',
    sa.Column('history_id', sa.Integer(), autoincrement=True, nullable=False, comment='評価履歴ID'),
    sa.Column('eval_id', sa.Integer(), nullable=False, comment='評価ID'),
    sa.Column('user_id', sa.UUID(), nullable=False, comment='評価者ユーザーID (UUID)'),
    sa.Column('report_id', sa.UUID(), nullable=False, comment='レポートID (UUID)'),
    sa.Column('score', sa.Integer(), nullable=True, comment='評価スコア'),
    sa.Column('comment', sa.Text(), nullable=True, comment='評価コメント'),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True, comment='作成日時'),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True, comment='更新日時'),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True, comment='削除日時'),
    sa.ForeignKeyConstraint(['report_id'], ['report.report_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('history_id')
    )
    op.create_table('report_supplement',
    sa.Column('report_supplement', sa.Integer(), autoincrement=True, nullable=False, comment='レポート補足ID'),
    sa.Column('report_id', sa.UUID(), nullable=False, comment='レポートID (UUID)'),
    sa.Column('user_id', sa.UUID(), nullable=False, comment='ユーザーID (UUID)'),
    sa.Column('content', sa.Text(), nullable=True, comment='レポート補足内容'),
    sa.Column('start_report', sa.Integer(), nullable=True, comment='レポート補足開始位置'),
    sa.Column('end_report', sa.Integer(), nullable=True, comment='レポート補足終了位置'),
    sa.Column('supplement_url', sa.Text(), nullable=True, comment='レポート補足根拠'),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True, comment='作成日時'),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True, comment='更新日時'),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True, comment='削除日時'),
    sa.ForeignKeyConstraint(['report_id'], ['report.report_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('report_supplement')
    )
    op.create_table('report_tag_link',
    sa.Column('report_id', sa.UUID(), nullable=False, comment='レポートID (UUID)'),
    sa.Column('tag_id', sa.Integer(), nullable=False, comment='タグID'),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True, comment='作成日時'),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True, comment='更新日時'),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True, comment='削除日時'),
    sa.ForeignKeyConstraint(['report_id'], ['report.report_id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['report_tag.tag_id'], ),
    sa.PrimaryKeyConstraint('report_id', 'tag_id')
    )
    op.create_table('report_view_history',
    sa.Column('history_id', sa.Integer(), autoincrement=True, nullable=False, comment='履歴ID'),
    sa.Column('user_id', sa.UUID(), nullable=False, comment='ユーザーID (UUID)'),
    sa.Column('report_id', sa.UUID(), nullable=False, comment='レポートID (UUID)'),
    sa.Column('view_date', sa.TIMESTAMP(), nullable=True, comment='閲覧日時'),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True, comment='作成日時'),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True, comment='更新日時'),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True, comment='削除日時'),
    sa.ForeignKeyConstraint(['report_id'], ['report.report_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('history_id')
    )
    op.create_table('report_comment_history',
    sa.Column('history_id', sa.Integer(), autoincrement=True, nullable=False, comment='レポート補足履歴ID'),
    sa.Column('report_supplement', sa.Integer(), nullable=False, comment='レポート補足ID'),
    sa.Column('user_id', sa.UUID(), nullable=False, comment='ユーザーID (UUID)'),
    sa.Column('report_id', sa.UUID(), nullable=False, comment='レポートID (UUID)'),
    sa.Column('content', sa.Text(), nullable=True, comment='コメント内容'),
    sa.Column('report_supplement_action', sa.SmallInteger(), nullable=False, comment='アクション (1: created, 2: updated, 3: deleted)'),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True, comment='作成日時'),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True, comment='更新日時'),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True, comment='削除日時'),
    sa.ForeignKeyConstraint(['report_id'], ['report.report_id'], ),
    sa.ForeignKeyConstraint(['report_supplement'], ['report_supplement.report_supplement'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('history_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('report_comment_history')
    op.drop_table('report_view_history')
    op.drop_table('report_tag_link')
    op.drop_table('report_supplement')
    op.drop_table('report_evaluation_history')
    op.drop_table('user_view_history')
    op.drop_table('user_search_history')
    op.drop_table('user_profile')
    op.drop_table('user_ip_address')
    op.drop_table('user_group_membership')
    op.drop_table('user_evaluation_history')
    op.drop_table('tag_view_history')
    op.drop_table('report')
    op.drop_table('group_search_history')
    op.drop_table('group_profile')
    op.drop_table('group_evaluation_history')
    op.drop_table('group_evaluation')
    op.drop_table('user_group')
    op.drop_table('user')
    op.drop_table('report_tag')
    # ### end Alembic commands ###
