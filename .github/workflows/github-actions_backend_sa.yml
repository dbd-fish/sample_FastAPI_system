name: mypy, ruff

on:
  pull_request:
  # プルリクエストにプッシュするたびに実行したい場合はtypesをコメントにする
    # types: 
    #   - closed
    # プルリクエストがマージされるときにこのワークフローをトリガーします。
  workflow_dispatch:
    # 手動でこのワークフローをトリガーします。

jobs:
  setup_environment:
    name: Setup Docker Environment
    runs-on: ubuntu-latest
    # ジョブをUbuntu最新環境で実行します。

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        # リポジトリのコードをチェックアウトします。
        # 後続のステップでコードベースにアクセスするための準備です。

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
        # Docker Composeをインストールします。
        # GitHub Actionsの初期設定には含まれていないため、このステップで追加します。

      - name: Start Backend Container
        run: |
          docker-compose up -d backend
        # docker-compose.ymlを使用して、バックエンドサービスのコンテナを起動します。
        # -d オプションを使用してバックグラウンドで実行します。

      - name: Check Backend Container
        run: |
          docker ps
        # 起動中のDockerコンテナを一覧表示します。
        # backendコンテナが正しく起動しているかを確認するためのステップです。

    outputs:
      container_name: ${{ steps.get_container_name.outputs.container_name }}
      # 環境セットアップの結果としてコンテナ名を出力します。

  run_ruff:
    name: Run Ruff
    needs: setup_environment
    # setup_environmentジョブの完了を待機します。

    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        # リポジトリのコードをチェックアウトします。

      - name: List Docker Containers
        run: |
          docker ps
        # 現在起動中のDockerコンテナを一覧表示します。
        # コンテナが正しく起動しているか確認するためのステップです。

      - name: Run Ruff in Backend Container
        run: |
          docker exec sample_backend_container poetry run ruff check
        # backendコンテナ内でruffを実行します。
        # docker execを使用して、コンテナ内部でruffを実行しています。

  run_mypy:
    name: Run Mypy
    needs: setup_environment
    # setup_environmentジョブの完了を待機します。

    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        # リポジトリのコードをチェックアウトします。

      - name: Run Mypy
        run: |
          docker exec sample_backend_container poetry run mypy .
        # backendコンテナ内でmypyを実行します。
        # docker execを使用して、コンテナ内部でmypyを実行しています。
